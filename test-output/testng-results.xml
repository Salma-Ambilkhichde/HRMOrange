<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="6" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-27T15:25:16 IST" name="Suite" finished-at="2023-03-27T15:25:50 IST" duration-ms="34037">
    <groups>
    </groups>
    <test started-at="2023-03-27T15:25:16 IST" name="Test" finished-at="2023-03-27T15:25:50 IST" duration-ms="34037">
      <class name="test_Package.LogIn">
        <test-method signature="verifyFunctionalityWithIncorrectData1()[pri:0, instance:test_Package.LogIn@2b71e916]" started-at="2023-03-27T15:25:40 IST" name="verifyFunctionalityWithIncorrectData1" finished-at="2023-03-27T15:25:42 IST" duration-ms="2551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityWithIncorrectData1 -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:test_Package.LogIn@2b71e916]" started-at="2023-03-27T15:25:42 IST" name="captureScreenshot" finished-at="2023-03-27T15:25:44 IST" duration-ms="1351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityWithIncorrectData1 status=SUCCESS method=LogIn.verifyFunctionalityWithIncorrectData1()[pri:0, instance:test_Package.LogIn@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method signature="verifyFunctionalityWithIncorrectData2()[pri:1, instance:test_Package.LogIn@2b71e916]" started-at="2023-03-27T15:25:44 IST" name="verifyFunctionalityWithIncorrectData2" finished-at="2023-03-27T15:25:45 IST" duration-ms="1045" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityWithIncorrectData2 -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:test_Package.LogIn@2b71e916]" started-at="2023-03-27T15:25:45 IST" name="captureScreenshot" finished-at="2023-03-27T15:25:46 IST" duration-ms="1084" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityWithIncorrectData2 status=SUCCESS method=LogIn.verifyFunctionalityWithIncorrectData2()[pri:1, instance:test_Package.LogIn@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method signature="VerifyLoginPage()[pri:2, instance:test_Package.LogIn@2b71e916]" started-at="2023-03-27T15:25:46 IST" name="VerifyLoginPage" finished-at="2023-03-27T15:25:46 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.fail(Assert.java:115)
at test_Package.LogIn.VerifyLoginPage(LogIn.java:60)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyLoginPage -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:test_Package.LogIn@2b71e916]" started-at="2023-03-27T15:25:46 IST" name="captureScreenshot" finished-at="2023-03-27T15:25:47 IST" duration-ms="1283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyLoginPage status=FAILURE method=LogIn.VerifyLoginPage()[pri:2, instance:test_Package.LogIn@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method signature="verifyFunctionalityCorrectData()[pri:3, instance:test_Package.LogIn@2b71e916]" started-at="2023-03-27T15:25:47 IST" name="verifyFunctionalityCorrectData" finished-at="2023-03-27T15:25:49 IST" duration-ms="1892" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityCorrectData -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:test_Package.LogIn@2b71e916]" started-at="2023-03-27T15:25:49 IST" name="captureScreenshot" finished-at="2023-03-27T15:25:50 IST" duration-ms="1091" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityCorrectData status=SUCCESS method=LogIn.verifyFunctionalityCorrectData()[pri:3, instance:test_Package.LogIn@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
      </class> <!-- test_Package.LogIn -->
      <class name="test_Package.BaseClass">
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:test_Package.BaseClass@48f2bd5b]" started-at="2023-03-27T15:25:16 IST" name="beforeTest" finished-at="2023-03-27T15:25:40 IST" duration-ms="23442" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:test_Package.BaseClass@48f2bd5b]" started-at="2023-03-27T15:25:50 IST" name="afterTest" finished-at="2023-03-27T15:25:50 IST" duration-ms="250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- test_Package.BaseClass -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
